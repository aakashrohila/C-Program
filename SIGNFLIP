#include <stdio.h>
#define swap(a,b) {int t=a; a = b; b = t;}

int partition(int *arr,int l,int h);
void quick_sort(int *arr,int l,int h);

int main(void) {
	int test_cases;
	scanf("%d",&test_cases);
	
	while(test_cases--)
	{
	    int N,K,flag = 0;
	    scanf("%d %d", &N,&K);
	    
	    int arr[N],i,sum = 0,neg_arr[N];
	    int m = 0;
	    for(i=0;i<N;i++)
	    {
	        scanf("%d",&arr[i]);
	        if(arr[i]>0)
	            sum = sum + arr[i];
	        else
	        {
	            neg_arr[m] = arr[i];
	            m++;
	            flag = 1;
	        }
	    }
	    
	    if(flag == 1)
	    {
    	    quick_sort(neg_arr,0,m+1);
    	    
    	    for(i=0;i<m+1;i++)
    	    {
    	        if(K>0)
    	        {
    	            sum = sum + abs(neg_arr[i]);
    	            K--;
    	        }
    	    }
	    }
	    
	   printf("%d\n",sum);
	   
	}
	return 0;
}


void quick_sort(int *arr,int l,int h)
{
    int j;
    
    if(l<h)
    {
        j = partition(arr,l,h);
        quick_sort(arr,0,j);
        quick_sort(arr,j+1,h);
    }
}

int partition(int *arr,int l,int h)
{
    int i = l;
    int j = h;
    int pivot = arr[l];
    
    do
    {
        do{
            i++;
        }while(arr[i] <=  pivot);
        
        do{
            j--;
        }while(arr[j] > pivot);
    
    if(i<j)
        swap(arr[i],arr[j]);

    }while(i<j);
    
    swap(arr[l],arr[j]);
    
    return j;
    
}
